<?xml version="1.0" encoding="utf-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <!-- coordinates for model and artifact -->
  <modelVersion>4.0.0</modelVersion>

  <groupId>eu.simuline</groupId>
  <artifactId>qMngmnt</artifactId>
  <version>0.0.6-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>Quality Management @ Simuline</name>
  <description>
    This is a collection of resources and documents
    describing the general quality management for simuline. 
  </description>

  <url>http://www.simuline.eu</url>  <!-- TBD: create -->
  <inceptionYear>2021</inceptionYear>
  <licenses>
    <license>
      <name>The Creative Commons License</name>
      <url>http://creativecommons.org/licenses/by/4.0/</url>
      <distribution>repo</distribution>
      <comments>
	This work is licensed under a
	Creative Commons Attribution 4.0 International License.
      </comments>
    </license>
  </licenses>

  <organization>
    <name>Simuline Organization (l2r)</name>
    <url>http://www.simuline.eu</url>
  </organization>

  <developers>
    <developer>
      <id>ereissner</id>
      <name>Ernst Reissner</name>
      <email>Ernst.Reissner at simuline dot eu</email>
      <organization>simuline</organization>
      <organizationUrl>https://www.simuline.eu</organizationUrl>
      <timezone>Europe/Berlin</timezone>
    </developer>
  </developers>

  <!-- source repositories: tests and documentation 
       maybe not yet needed. -->
  <repositories>
    <repository>
      <id>publicRepoAtSimuline</id>
      <name>repo at simuline</name>
      <url>https://www.simuline.eu/RepositoryMaven</url>
    </repository>
  </repositories>

  <scm>
    <connection>
      scm:git:https://github.com/Reissner/QMngMnt.git
    </connection>
    <developerConnection>
      scm:git:https://github.com/Reissner/QMngMnt.git
    </developerConnection>
    <url>https://github.com/Reissner/QMngMnt</url>
    <tag>HEAD</tag>
  </scm>


  <!-- For authentication see ~/.m2/settings.xml -->
  <distributionManagement>
    <site>
      <id>publicSiteAtSimuline</id>
      <url>ftp://www.simuline.eu/public_html/QualityManagement</url>
    </site>

    <repository>
      <id>publicRepoAtSimuline</id>
      <url>ftp://www.simuline.eu/public_html/RepositoryMaven</url>
    </repository>
  </distributionManagement>


  <mailingLists>
    <!--mailingList>
      <name>QMngMnt Users</name>
      <archive>http://groups.google.com/group/QMngMnt-users</archive>
      <post>QMngMnt-users@googlegroups.com</post>
      <subscribe>QMngMnt-users+subscribe@googlegroups.com</subscribe>
      <unsubscribe>QMngMnt-users+unsubscribe@googlegroups.com</unsubscribe>
    </mailingList-->
  </mailingLists>

  <!-- properties: ensures reproducibility -->
  <properties>
    <!-- to keep dependencies up to date: 
    mvn versions:display-plugin-updates
    mvn versions:display-dependency-updates -->

    <!-- checked during validation -->
    <versionMvn>3.9.2</versionMvn>
    <!-- Using platform encoding to copy filtered resources; 
    without project.build.sourceEncoding the build is platform dependent! -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <versionTikzuml>tikzuml-v1.0-2016-03-29</versionTikzuml>
    <versionJabref>5.9-1.x86_64</versionJabref>
    <versionLatexPlugin>2.0-SNAPSHOT</versionLatexPlugin>
    <instDir>src/main/resources/eu/simuline/qMngmnt/installation/</instDir>
    <latexDir>src/main/resources/eu/simuline/qMngmnt/latex/</latexDir>
  </properties>


  <build>

    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ftp</artifactId>
        <version>3.3.2</version>
      </extension>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-file</artifactId>
        <version>3.3.2</version>
      </extension>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-http</artifactId>
        <version>3.3.2</version>
      </extension>
    </extensions>

    <!-- copy into target/classes -->
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>


    <plugins>
      <!-- at the moment just to enforce maven version
	   use as mvn validate not as mvn enforcer:enforce
	   TBD: add a lot of tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <phase>validate</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>${versionMvn}</version>
                  <message>
		    Invalid Maven version. It should, at least, be ${versionMvn}
                  </message>
                </requireMavenVersion>
                <!--requireJavaVersion>
		  <version>11</version>
		</requireJavaVersion-->
                <!--dependencyConvergence/-->                <!-- this fails because of plugin-api -->
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- information about a project or the system -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-help-plugin</artifactId>
        <version>3.2.0</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.0</version>
        <configuration>
          <nonFilteredFileExtensions>
            <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
            <nonFilteredFileExtension>ppt</nonFilteredFileExtension>
            <nonFilteredFileExtension>epub</nonFilteredFileExtension>
          </nonFilteredFileExtensions>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>3.0.0-M6</version>
      </plugin>

      <!-- configuration for clean plugin -->
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.2.0</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>${instDir}</directory>
              <includes>
                <include>${versionTikzuml}.tbz</include>
                <include>find_uno.py</include>
                <include>*.xpi</include>
                <include>jabref-${versionJabref}.rpm</include>
              </includes>
            </fileset>
            <fileset>
            	<directory>${instDir}</directory>
              <includes>
                <include>instVScode4tex.sh</include>
              </includes>
            </fileset>
            <fileset>
            	<directory>${latexDir}</directory>
              <includes>
                <include>.latexmkrc</include>
							  <include>.chktexrc</include>
              </includes>
            </fileset>
            <fileset>
            	<directory>src/main/resources</directory>
              <includes>
                <include>.latexmkrc</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>

     <!-- This plugin will write properties values 
	   using dependency information into classpath.txt-->
      <!--plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.2</version>
        <executions>
          <execution>
            <?m2e execute onConfiguration,onIncremental?>
            <goals>
              <goal>build-classpath</goal>
            </goals>
            <configuration>
              <outputFile>${project.build.directory}/classpath.txt</outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin-->


      <!-- The dependency plugin makes dependencies available: 
	     - lots of goals are useful standalone: analyze, 
	       analyze-dep-mgt, analyze-duplicate
	     - goal properties 
	     - goal build-classpath writes the classpath 
	     defined by the dependencies to file clspath.txt. 
      This goal properties will set properties values 
	     using dependency information 
    also dependencies are avaiable as variables, e.g. ${junit:junit:jar}-->
			<!-- the properties-maven-plugin then writes those properties 
	   in a file to ${project.build.outputDirectory}/mvn.properties  -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.6.0</version>
				<executions>
          <!-- TBD: clarify where needed -->
					<!--execution>
						<?m2e execute onConfiguration,onIncremental?>
						<id>determine-properties</id>
						<phase>initialize</phase>
						<goals>
							<goal>properties</goal>
						</goals>
					</execution-->

					<execution>
						<?m2e execute onConfiguration,onIncremental?>
						<id>unpack-latex-bibs-interfaces-src-build</id>
						<phase>initialize</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
					</execution>

          <!-- not necessary because maven-jxr-plugin used -->
					<!--execution>
						<id>unpack-latex-bibs-interfaces-src-site</id>
						<phase>pre-site</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
					</execution-->

          <execution>
            <?m2e execute onConfiguration,onIncremental?>
            <goals>
              <goal>build-classpath</goal>
            </goals>
            <configuration>
              <outputFile>${project.build.directory}/classpath.txt</outputFile>
            </configuration>
          </execution>

				</executions>

				<configuration>
					<artifactItems>
						<artifactItem>
            	<groupId>eu.simuline.m2latex</groupId>
	            <artifactId>latex-maven-plugin</artifactId>
	            <version>${versionLatexPlugin}</version>
							<type>jar</type>
							<overWrite>true</overWrite>
							<outputDirectory>${instDir}</outputDirectory>
							<includes>instVScode4tex.sh</includes>
							<fileMappers>
								<org.codehaus.plexus.components.io.filemappers.IdentityMapper />
							</fileMappers>
						</artifactItem>

            <artifactItem>
            	<groupId>eu.simuline.m2latex</groupId>
	            <artifactId>latex-maven-plugin</artifactId>
	            <version>${versionLatexPlugin}</version>
							<type>jar</type>
							<overWrite>true</overWrite>
							<outputDirectory>${latexDir}</outputDirectory>
							<includes>.latexmkrc, .chktexrc</includes>
							<fileMappers>
								<org.codehaus.plexus.components.io.filemappers.IdentityMapper/>
							</fileMappers>
						</artifactItem>

						<artifactItem>
            	<groupId>eu.simuline.m2latex</groupId>
	            <artifactId>latex-maven-plugin</artifactId>
	            <version>${versionLatexPlugin}</version>
							<type>jar</type>
							<overWrite>true</overWrite>
							<outputDirectory>src/main/resources</outputDirectory>
							<includes>.latexmkrc.raw</includes>
							<fileMappers><!-- hack! -->
								<org.codehaus.plexus.components.io.filemappers.RegExpFileMapper>
                  <pattern>c.raw$</pattern>
                  <replacement>c</replacement>
								</org.codehaus.plexus.components.io.filemappers.RegExpFileMapper>
							</fileMappers>
						</artifactItem>
					</artifactItems>

				</configuration>

			</plugin>


      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.10.1</version>
      </plugin>


      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.2.2</version>
      </plugin>


      <!-- writes the tar.gz file for the suse tumbleweed installer -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.4.2</version>        <!-- 3.3.0 -->

        <executions>
          <execution>
            <id>assemble_tgz</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <appendAssemblyId>true</appendAssemblyId>
              <descriptors>
                <descriptor>src${file.separator}assembly${file.separator}installer.xml</descriptor>
              </descriptors>
              <!--formats>tar.gz</formats-->
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <version>3.0.1</version>
      </plugin>


      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>3.0.0</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>sign-artifacts</id>
            <phase>verify</phase>
            <goals>
              <goal>sign</goal>
            </goals>
          </execution>
        </executions>
      </plugin>


      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>4.0.0-M3</version>
        <configuration>
          <locales>en</locales>
        </configuration>
      </plugin>

      <!-- create html and pdf and other formats from latex -->
      <!-- this is activated for developer tests only -->
      <plugin>
				<groupId>eu.simuline.m2latex</groupId>
				<artifactId>latex-maven-plugin</artifactId>
				<version>${versionLatexPlugin}</version>

				<configuration>
					<settings>
						<latex2pdfCommand>lualatex</latex2pdfCommand>
						<cleanUp>false</cleanUp>
            <texSrcDirectory>src/main/resources/eu/simuline/qMngmnt/latex</texSrcDirectory>
					</settings>	
				</configuration>
				<executions>
					<!--execution>
						<id>process-latex-sources-pdf</id>
						<goals>
							<goal>pdf</goal>
						</goals>
					</execution>

					<execution>
						<id>process-latex-sources</id>
						<goals>
							<goal>cfg</goal>
						</goals>
					</execution-->
					<execution>
						<id>clear-latex-sources</id>
						<goals>
							<goal>clr</goal>
						</goals>
					</execution>
					<execution>
						<id>validate-converters</id>
						<goals>
							<goal>vrs</goal>
						</goals>
						<configuration>
							<versionsWarnOnly>true</versionsWarnOnly>
						</configuration>
					</execution>
				</executions>
			</plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>3.4.2</version>
        <configuration>
          <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
        </configuration>
      </plugin>

			<!-- as a side effect, triggers 'generate-sources' forked phase execution  -->
      <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>3.3.0</version>
			</plugin>


      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>3.0.0</version>
        <reportSets />
      </plugin>

      <!-- offers also command line analysis:
      mvn versions:display-plugin-updates
      mvn versions:display-dependency-updates
      mvn versions:display-property-updates
      -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <!-- TBD: uniform version -->
        <version>2.15.0</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>dependency-updates-report</report>
              <report>plugin-updates-report</report>
              <report>property-updates-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-changes-plugin</artifactId>
        <version>2.12.1</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>changes-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

    </plugins>
  </reporting>


</project>
